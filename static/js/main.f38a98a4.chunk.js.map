{"version":3,"sources":["Util/which-js-env/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.module.css","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ListPage/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/CustomBreadcrumb/index.js","Components/lib/CustomFooter/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","Components/Projects/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/CustomAlert/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","Components/Transcripts/TranscriptCorrect.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/select-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Word.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/css-color-names.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelForm.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelModal.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEdits/PaperEdit/Transcripts/get-user-selection.js","Components/PaperEdits/PaperEdit/Transcripts/Transcript.js","Components/PaperEdits/PaperEdit/Transcripts/index.js","Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js","Components/PaperEdits/PaperEdit/ProgramScript/get-data-from-user-selection.js","Components/PaperEdits/PaperEdit/ProgramScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEdits/PaperEdit/ProgramScript/index.js","Components/PaperEdits/PaperEdit/index.js","App.js","serviceWorker.js","index.js"],"names":["process","__dirname","whichJsEnv","undefined","window","versions","electron","cep","chdir","err","console","log","error","module","exports","speaker","unselectable","highlightedWord","SimpleCard","handleDelete","confirm","_this","props","id","alert","handleEdit","showLinkPath","react_default","a","createElement","Card","style","width","marginBottom","Body","Row","lib","to","this","cursor","Col","xs","sm","md","ld","xl","Title","href","concat","title","Link","Button","onClick","variant","size","index_es","icon","faPen","faTrash","Subtitle","className","description","Component","List","listItems","items","map","item","display","lib_SimpleCard","key","filter","Fragment","height","overflow","React","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","InputGroup","Prepend","Text","faSearch","FormControl","onChange","placeholder","aria-label","aria-describedby","Page","results","project","handleUpdateList","searchEl","length","lib_SearchBar","handleShowCreateNewItemForm","block","model","lib_List","ItemForm","handleTitleChange","event","handleDescriptionChange","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","_this2","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal","Footer","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","modalTitle","lib_ItemForm","CustomBreadcrumb","breadcrumbs","index","link","Breadcrumb","Item","name","active","CustomFooter","footer","Navbar","collapseOnSelect","expand","bg","fixed","faFlask","rel","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","data","arguments","applicationType","mode","body","JSON","stringify","headers","Content-Type","_callee","url","_args","regenerator_default","wrap","_context","prev","next","fetch","abrupt","sent","stop","corsFetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","env","API_URL","res","json","projects","getProject","resProject","projectTitle","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","DemoApiWrapper","response","_id","status","ok","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","jsENV","src_ApiWrapper","demoApiWrapper","freeze","apiWrapper","electronWrapper","ElectronWrapper","Projects","handleSaveItem","updateProject","then","findItemById","findIndex","element","isNewItemModalShow","itemId","createProject","toConsumableArray","push","list","p","handleEditItem","showLinkPathToItem","handleDeleteItem","bind","assertThisInitialized","getAllProjects","result","tmpList","t0","deleteProject","newItemsList","Container","marginTop","lib_CustomBreadcrumb","ListPage","deleteItem","createNew","editItem","lib_ItemFormModal","lib_CustomFooter","CustomTranscriptCard","borderStatus","Badge","showLink","Alert","faExclamationTriangle","errorMessage","border","disabled","Spinner","as","animation","role","aria-hidden","faCheck","subtitle","ListPageTranscript","itemsCards","content","lib_CustomTranscriptCard","CustomAlert","handleDismiss","onClose","dismissible","heading","Heading","message","TranscriptForm","handleFileUpload","file","Array","from","files","FormData","append","path","mediaFileSelected","sendRequest","uploading","get","createTranscript","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","lib_CustomAlert","dismissable","accept","NewTranscriptFormModal","Transcripts_TranscriptForm","Transcripts","componentWillUnmount","interval","clearInterval","asyncToGenerator","mark","areThereTranscriptsInProgress","newItem","newitems","handleSaveEditedItem","newEditedItem","itemIdex","updateTranscript","isEditItemModalShow","handleCloseModalEdit","isServerError","setInterval","deleteTranscript","findId","tmpNewList","lib_ListPageTranscript","faFileAlt","Transcripts_NewTranscriptFormModal","PaperEdits","updatePaperEdit","createPaperEdit","getAllPaperEdits","deletePaperEdit","Project","context","match","params","projectName","Tabs","activeKey","onSelect","Tab","eventKey","Components_Transcripts","Components_PaperEdits","TranscriptCorrect","componentDidMount","transcriptJson","mediaType","saveToServer","transcriptEditorRef","current","getEditorContent","redirectToAnnotatePage","renderRedirect","Redirect","createRef","fluid","react_transcript_editor","transcriptData","mediaUrl","isEditable","sttJsonType","ref","colourStyles","control","styles","_objectSpread","backgroundColor","option","_ref","isDisabled","isFocused","isSelected","borderLeft","borderColor","color","multiValue","_ref2","multiValueLabel","_ref3","multiValueRemove","_ref4","speakersColorStyles","select_speakers_color_styles_objectSpread","handleToggleSearchTextPreferences","showTextSearchPreferences","handleToggleSearchLabelsPreferences","showLabelsSearchPreferences","handleToggleSearchSpeakersPreferences","showSpeakersSearchPreferences","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleToggleAll","handleHideAll","DropdownButton","drop","Append","faFilter","Dropdown","faTag","faUser","faAlignJustify","Divider","react_select_esm","isMulti","isSearchable","options","labelsOptions","speakersOptions","Check","checked","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","text","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","addWordsToSpeakersParagraphs","findAnnotationInParagraph","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","Paragraph_objectSpread","data-paragraph-text","paragraphTextWithoutPunctuation","lg","speakerName","toUpperCase","shortTimecode","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","i","dec","Math","floor","_this$props","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","wordEl","Paragraphs_Word","Paragraphs_AnnotationOverlayTrigger","note","Paragraphs_Paragraph","csscolors","yellow","greenyellow","deepskyblue","deeppink","aqua","black","blueviolet","brown","burlywood","cadetblue","chocolate","coral","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","blue","dimgray","dimgrey","dodgerblue","firebrick","forestgreen","fuchsia","gainsboro","goldenrod","gold","gray","green","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","chartreuse","limegreen","linen","magenta","maroon","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","yellowgreen","aquamarine","mediumaquamarine","colorNamesList","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","handleSave","onLabelSaved","defaultValue","onInput","rows","faSyncAlt","react_color_lib","triangle","onChangeComplete","colors","LabelModal","handleShow","openBtn","LabelsList_LabelForm","LabelsList","removeLabel","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup","LabelsList_LabelModal","faTimes","labelsList","overflowY","overflowX","isLabelsListOpen","faTags","faCog","onlyCallOnce","cb","duration","timer","args","clearTimeout","setTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","has","set","return","Transcript","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","currentTime","play","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","parse","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","showLabelsReference","getCurrentWordTime","currentWordTime","transcriptMediaCard","time","round","highlights","scoped","cardBodyHeight","src","onTimeUpdate","controls","ButtonGroup","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","Transcripts_LabelsList","Transcripts_SearchBar","onDoubleClick","Transcripts_Paragraphs","transcriptsElNav","Nav","faClock","transcriptsElTab","Pane","Transcripts_Transcript","defaultActiveKey","Content","VoiceOver","faMicrophoneAlt","PaperCut","w","cuid","userSelect","TitleHeading","Note","InsertPoint","faArrowAltCircleRight","DragHandle","sortableHandle","faGripLines","SortableItem","sortableElement","faArrowAltCircleLeft","SortableContainer","sortableContainer","children","listStyle","ProgrammeScript","onSortEnd","oldIndex","newIndex","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","ProgramScript_TitleHeading","ProgramScript_VoiceOver","ProgramScript_PaperCut","ProgramScript_Note","ProgrammeScript_InsertPoint","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement","parseWordElDataset","innerText","getDataFromUserWordsSelection","isOneParagraph","firstword","divideWordsSelectionsIntoParagraphs","previousWordSpeaker","currentParagraph","paragraphsResult","defaultReelName","defaultFps","defaultTimecodeOffset","defaultSampleRate","ProgramScript","elements","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","insertPointElement","handleAddTranscriptSelectionToProgrammeScript","reverse","getSequenceJsonEDL","_edlSq$events","edlSq","events","programmeScriptPaperCutsWithId","currentTranscript","startTime","endTime","reelName","metadata","clipName","fps","offset","timecode","sampleRate","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","firstElement","generateADL","projectOriginator","edits","frameRate","handleExportFCPX","jsonToFCPX","getProgrammeScriptJson","_edlSq$events2","ProgramScript_objectSpread","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleExportTxt","getPlayList","sourceStart","handleUpdatePreview","playlist","resetPreview","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","PreviewCanvas_default","noGutters","faPlus","faHeading","faSync","faShare","faInfoCircle","faSave","ProgramScript_ProgrammeScript","PaperEdit","get_ProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","videoHeight","faAngleDown","faAngleUp","span","PaperEdit_Transcripts","PaperEdit_ProgramScript","demoWarningMessage","NoMatch","App","envWarning","offlineWarning","navigator","onLine","HashRouter","Switch","Route","exact","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f38a98a4.chunk.js","sourcesContent":["/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n      //   console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n      //   console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      try {\n        process.chdir(__dirname);\n        // process.chdir('..');\n        // console.log('New directory: ' + process.cwd());\n      }\n      catch (err) {\n        console.log('chdir: ' + err);\n      }\n\n      return 'cep';\n\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__1kdz6\",\"unselectable\":\"Paragraphs_unselectable__3k2Ob\",\"highlightedWord\":\"Paragraphs_highlightedWord__3mJtY\"};","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <Card style={ { width: '100%', marginBottom: '1em' } }>\n        <Card.Body>\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                  <a href={ `#${ this.showLinkPath() }` } >\n                    {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <section style={ { height: '75vh', overflow: 'scroll' } }>\n        {listItems}\n      </section>\n    </>\n    );\n  }\n}\n\nexport default List;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default ( () => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n})();\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n  async componentDidMount () {\n    try {\n    // TODO: do we need to add user id in request?\n      const result = await ApiWrapper.getAllProjects();\n\n      if (result) {\n      // add a display property for component cards search\n        const tmpList = result.map(project => {\n          project.display = true;\n\n          return project;\n        });\n        this.setState({ items: tmpList });\n      }\n    } catch (e) {\n      console.log('Error with ApiWrapper.getAllProjects', e);\n    }\n    // TODO: some error handling\n  };\n\n  // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createProject(item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const projects = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newProject = response.project;\n          newProject.display = true;\n          projects.push(response.project);\n          this.setState({\n            isNewItemModalShow: false,\n            items: projects,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updateProject(item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const project = response.project;\n          // need to add display true attribute for search to the new project\n          project.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          this.findItemById(items, item);\n          const projectIndex = this.state.items.findIndex(element => element.id === project.id);\n          items[projectIndex] = project;\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n    console.log('edit item', item);\n  }\n\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deleteProject(itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (<>\n      <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb items={ [\n              {\n                name: 'Projects'\n              }\n            ] } />\n          </Col>\n        </Row>\n        <ListPage\n          model={ 'Project' }\n          items={ this.state.items }\n          handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n          deleteItem={ this.createNew }\n          editItem={ this.createNew }\n          handleEdit={ this.handleEditItem }\n          handleDelete={ this.handleDeleteItem }\n          showLinkPath={ this.showLinkPathToItem }\n          handleUpdateList={ this.handleUpdateList }\n        />\n        <ItemFormModal\n          title={ this.state.title }\n          description={ this.state.description }\n          id={ this.state.itemId }\n          modalTitle={ this.state.itemId ? 'Edit Project' : 'New Project' }\n          show={ this.state.isNewItemModalShow }\n          handleCloseModal={ this.handleCloseModal }\n          handleSaveForm={ this.handleSaveItem }\n        />\n      </Container>\n      <CustomFooter/>\n    </>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faCheck,\n  faExclamationTriangle,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let description;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      description = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      description = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={ `#${ this.props.showLink() }` }> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      description = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={ faExclamationTriangle } />{' '}\n            {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <Card\n        border={ borderStatus }\n        style={ { width: '100%', marginBottom: '2em' } }\n      >\n        <Card.Body>\n          <Row>\n            <Col xs={ 12 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n              <Card.Title>\n                {this.props.icon ? this.props.icon : ''} {title}\n              </Card.Title>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              {status && status === 'info' ? (\n                <Button variant=\"info\" size=\"sm\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'danger' ? (\n                <Button variant=\"danger\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faExclamationTriangle } />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'success' ? (\n                <Button variant=\"success\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faCheck } />\n                </Button>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {this.props.subtitle}\n              </Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              {description}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\n\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <section style={ { height: '75vh', overflow: 'scroll' } }>\n            {itemsCards}\n          </section>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n            {searchEl}\n          </Col>\n          <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n          </Col>\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/#dismissing\nclass CustomAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleDismiss = () => this.setState({ show: false });\n\n  render() {\n    if (this.state.show) {\n      return (\n        <Alert\n          variant={ this.props.variant }\n          onClose={ this.handleDismiss }\n          dismissible\n        >\n          {this.props.heading ? (\n            <Alert.Heading>{this.props.heading}</Alert.Heading>\n          ) : (\n            ''\n          )}\n          {this.props.message}\n        </Alert>\n      );\n    } else {\n      return (\n        <>\n          <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default CustomAlert;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    console.log(\"formData.get('path')\", formData.get('path'));\n\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n        Select an audio or video file to upload\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n        Please chose a audio or video file to upload\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n      this.getTranscripts();\n      // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly, \n      // and only if there are items in progress in the list, it checks the backed for updates\n      this.interval = setInterval(() => {\n        console.log('Running interval to check for transcripts');\n        if(this.areThereTranscriptsInProgress(this.state.items)){\n            console.log('interval: checking transcirpt update');\n            this.getTranscripts();\n        }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount =() => {\n    if (this.interval) {\n       clearInterval(this.interval);\n    }\n  }\n\n  getTranscripts = async () =>{\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n      // TODO: add error handling\n      if (result) {\n        const tmpList = result.transcripts.map((item) => {\n          item.display = true;\n\n          return item;\n        });\n        this.setState({\n          projectTitle: result.projectTitle,\n          items: tmpList\n        }, () => {\n          console.log('getTranscripts-tmpList');\n        });\n      }\n  }\n\n  areThereTranscriptsInProgress = (items) => {\n    if (items.length !== 0) {\n      const result = items.find((transcript) => {\n\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  }\n\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState');\n    });\n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      }, () => {\n        console.log('deleted')\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    console.log('ApiWrapper.getAllPaperEdits', result);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name'\n    };\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  };\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <CustomBreadcrumb items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: this.state.projectName\n                }\n              ] } />\n            </Col>\n          </Row>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={ this.state.key }\n            onSelect={ key => this.setState({ key }) }\n          >\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={ this.state.projectId }/>\n            </Tab>\n            <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n              <PaperEdits projectId={ this.state.projectId } />\n            </Tab>\n          </Tabs>\n        </Container>\n        <CustomFooter/>\n      </>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from 'react';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor } from '@bbc/react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null,\n      mediaType: 'video'\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url,\n          mediaType: json.mediaType\n        });\n      });\n  }\n\n  saveToServer = () => {\n    // TODO: add Api call to save content of\n    alert('save to server');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in @bbc/react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in bbc/react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('ApiWrapper.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { marginBottom: '5em' } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <CustomBreadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson !== null &&\n          <TranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            title={ this.state.transcriptTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n            mediaType={ this.state.mediaType }\n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from @bbc/react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n  // console.log('results', results);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@bbc/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' ApiWrapper.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations\n        });\n      });\n  }\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    ApiWrapper.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      ApiWrapper.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    ApiWrapper.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    const cardBodyHeight = this.props.mediaType === 'audio' ? '100vh' : '60vh';\n\n    let transcriptMediaCard;\n\n    if (this.props.mediaType === 'audio') {\n      transcriptMediaCard = (\n        <Card.Header>\n          <audio\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              width: '100%',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    } else {\n      transcriptMediaCard = (\n        <Card.Header>\n          <video\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              width: '100%',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    }\n\n    return (\n      <>\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        <Card>\n          {transcriptMediaCard}\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } >\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: cardBodyHeight, overflow: 'scroll' } }\n          >\n\n            {highlights}\n\n            {this.props.transcript &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ transcript.id }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ transcript.id } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            mediaType={ transcript.mediaType }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport cuid from 'cuid';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w) => {\n        return (\n          <span\n            key={ cuid() }\n            className=\"words\"\n            title={ `stat: ${ w.start }- end: ${ w.end }` }\n            data-start={ w.start }\n            data-end={ w.end }\n          >\n            {w.text}\n          </span>\n        );\n      });\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nPaperCut.propTypes = {\n  speaker: PropTypes.any,\n  words: PropTypes.any\n};\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\n\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: 'white' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\nconst SortableItem = sortableElement(({ value, index, type, handleDelete, handleEdit }) => {\n  return (<li>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faPen } onClick={ () => { handleEdit(index); } } /> : null}\n\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n        {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faTrash } onClick={ () => {handleDelete(index);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    // this.setState(({ items }) => ({\n    //   items:\n    // })\n    // );\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    console.log(result);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => (\n          <SortableItem\n            key={ `item-${ index }` }\n            index={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n          />\n        ))}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport cuid from 'cuid';\nimport PreviewCanvas from '@bbc/digital-paper-edit-react-components/PreviewCanvas';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@bbc/aes31-adl-composer';\nimport jsonToFCPX from '@bbc/fcpx-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScript from './ProgrammeScript.js';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs/index.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\n\nclass ProgramScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ],\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript\n        }\n        // TODO: figure out how to update preview\n        // , () => {\n        //   this.handleUpdatePreview();\n        // }\n        );\n      });\n\n  }\n\n  // TODO: save to server\n  handleProgrammeScriptOrderChange = (list) => {\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDeleteProgrammeScriptElement = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  handleEditProgrammeScriptElement = (i) => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      console.log(text);\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert-point';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    console.log('getDataFromUserWordsSelection::', result);\n    if (result) {\n      console.log(JSON.stringify(result, null, 2));\n\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    // const result = generateADL(edlSq);\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: firstElement.fps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          ...element,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log(edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text;}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  getTranscript = (transcriptId) => {\n    return this.props.transcripts.find((tr) => tr.id === transcriptId );\n  }\n\n  getPlayList = () => {\n    let startTime = 0;\n\n    return this.state.programmeScript.elements.filter((element) => element.type === 'paper-cut')\n      .map((element) => {\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const transcript = this.getTranscript(element.transcriptId);\n        console.log(element.transcriptId);\n        console.log(transcript);\n        const result = {\n          type:'video',\n          start: startTime,\n          sourceStart: element.start,\n          duration: element.end - element.start,\n          src: this.getTranscript(element.transcriptId).url\n        };\n\n        startTime += result.duration;\n\n        return result;\n      });\n  };\n\n  handleUpdatePreview = () => {\n    const playlist = this.getPlayList();\n    // Workaround to mound and unmount the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      console.log('handleUpdatePreview', playlist);\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    console.log('handleUpdatePreview', playlist);\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  // information around progressbar in the playlist object\n  render() {\n    return (\n      <>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n        </h2>\n        <Card>\n          <Card.Header>\n            { !this.state.resetPreview ?\n              <PreviewCanvas playlist={ this.state.playlist } />\n              : null }\n          </Card.Header>\n\n          <Card.Header>\n            <Row noGutters>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Button\n                  // block\n                  variant=\"outline-secondary\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                  title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 2 } ld={ 2 } xl={ 2 }>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faPlus } />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faHeading } /> Heading\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faStickyNote } /> Note\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleUpdatePreview }\n                  // size=\"sm\"\n                  title=\"update preview\"\n                  // block\n                >\n                  <FontAwesomeIcon icon={ faSync } /> Preview\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faShare } /> Export\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ this.handleExportEDL }\n                      title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                    >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                    >\n                      {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportFCPX }\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                    >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                    >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {alert('export word doc not implemented yet');} }\n                      title=\"export docx, export the programme script as a word document\"\n                    >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                    >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 1 } ld={ 1 } xl={ 1 }>\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleSaveProgrammeScript }\n                  // size=\"sm\"\n                  title=\"save programme script\"\n                  block\n                >\n                  <FontAwesomeIcon icon={ faSave } />\n                  {/* Save */}\n                </Button>\n              </Col>\n            </Row>\n          </Card.Header>\n\n          <Card.Body>\n            <article\n              style={ { height: '60vh', overflow: 'scroll' } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScript\n                programmeScriptElements={ this.state.programmeScript.elements }\n                handleProgrammeScriptOrderChange={ this.handleProgrammeScriptOrderChange }\n                handleDeleteProgrammeScriptElement={ this.handleDeleteProgrammeScriptElement }\n                handleEditProgrammeScriptElement={ this.handleEditProgrammeScriptElement }\n\n              />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgramScript from './ProgramScript/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n\nclass PaperEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n      videoHeight : '10em',\n    };\n  }\n\n  componentDidMount = async () => {\n\n    ApiWrapper.get_ProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <br/>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n          {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n            </Button>\n          </Col> */}\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgramScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n                videoHeight={ this.props.videoHeight }\n              />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default PaperEdit;\n","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap-css-only/css/bootstrap.css';\nimport Projects from './Components/Projects/index.js';\nimport Project from './Components/Projects/Project.js';\nimport TranscriptCorrect from './Components/Transcripts/TranscriptCorrect.js';\nimport PaperEdit from './Components/PaperEdits/PaperEdit';\nimport CustomAlert from './Components/lib/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nconst demoWarningMessage = (<><p> This is a demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n>see project Github repository for more info</Alert.Link>. </p><p>This is a read-only demo you can only play around with existing projects!</p></>);\n\nconst NoMatch = () => {\n  return <h1>There was an error loading the page you requested</h1>;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transcriptJson: null\n    };\n  }\n  // TODO: remove unused rootes\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    let envWarning = null;\n    let offlineWarning = null;\n\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      envWarning = (\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Demo mode' }\n            message={ demoWarningMessage }/>\n        </Container>);\n    }\n\n    if (!navigator.onLine) {\n      offlineWarning = <><br/><Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Offline warning' }\n          message={ 'You don\\'t seem to be connected to the internet ' }/>\n      </Container></>;\n    }\n\n    return (<>\n\n      {envWarning}\n\n      {offlineWarning}\n\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Projects } />\n          <Route exact path=\"/projects\" component={ Projects } />\n          <Route exact path=\"/projects/:projectId\" component={ Project } />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n            component={ TranscriptCorrect }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/paperedits/:papereditId\"\n            component={ PaperEdit }\n          />\n          <Route component={ NoMatch } />\n        </Switch>\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}