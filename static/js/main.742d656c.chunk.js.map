{"version":3,"sources":["Components/PaperEditor/Transcripts/Paragraphs/index.module.css","Util/which-js-env/index.js","Context/ApiContext.js","Components/lib/CustomFooter/index.js","Util/array-match/index.js","Components/lib/ItemsContainer/index.js","Util/in-text/index.js","Context/reducers.js","Components/Projects/index.js","Components/Workspace/Transcripts/index.js","Components/Workspace/PaperEdits/index.js","Components/Workspace/index.js","Components/Workspace/Transcripts/TranscriptEditor.js","Components/PaperEditor/Transcripts/LabelsList/select-color-styles.js","Components/PaperEditor/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEditor/Transcripts/SearchBar/index.js","Components/PaperEditor/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEditor/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEditor/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEditor/Transcripts/Paragraphs/Word.js","Components/PaperEditor/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEditor/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEditor/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEditor/Transcripts/Paragraphs/index.js","Components/PaperEditor/Transcripts/LabelsList/css-color-names.js","Components/PaperEditor/Transcripts/LabelsList/LabelForm.js","Components/PaperEditor/Transcripts/LabelsList/LabelModal.js","Components/PaperEditor/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEditor/Transcripts/get-user-selection.js","Components/PaperEditor/Transcripts/Transcript.js","Components/PaperEditor/Transcripts/index.js","Components/PaperEditor/ProgrammeScript/get-data-from-user-selection.js","Components/PaperEditor/ProgrammeScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEditor/ProgrammeScript/index.js","Components/PaperEditor/index.js","Routes.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","speaker","unselectable","highlightedWord","process","__dirname","whichJsEnv","undefined","window","versions","node","electron","cep","chdir","err","console","log","error","ApiContext","createContext","CustomFooter","footer","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","fixed","className","index_es","icon","faFlask","href","target","rel","Row","Col","arraysMatch","arr1","arr2","length","i","initialFormState","title","description","id","formReducer","state","arguments","_ref","type","payload","_objectSpread","ItemsContainer","props","searchEl","showItems","_useState","useState","_useState2","Object","slicedToArray","items","setItems","_useState3","_useState4","showModal","setShowModal","_useReducer","useReducer","_useReducer2","formData","dispatchForm","useEffect","arrayMatch","SearchBar_default","handleSearch","text","results","map","item","arr","sourceText","find","findText","toLowerCase","trim","includes","inText","display","handleFilterDisplay","List_default","handleEditItem","handleDeleteItem","handleDelete","Fragment","sm","xs","Button","onClick","size","block","FormModal_default","assign","modalTitle","concat","handleSaveForm","handleSave","itemType","defaultProps","updateItem","newItem","newItems","index","findIndex","deleteItem","filter","addItem","toConsumableArray","Projects","isFetch","setIsFetch","api","useContext","createProject","asyncToGenerator","regenerator_default","mark","_callee","response","newProject","wrap","_context","prev","next","sent","ok","project","stop","_x","apply","this","updateProject","_ref2","_callee2","_context2","_x2","_x3","_ref3","_callee3","_context3","abrupt","_x4","deleteProject","_ref4","_callee4","_context4","t0","_x5","_ref5","_callee5","allProjects","result","_context5","getAllProjects","key","url","getProjects","breadcrumbItems","name","link","Container","data-testid","style","marginBottom","marginTop","Breadcrumb_default","lib_ItemsContainer","model","lib_CustomFooter","React","memo","_useState5","_useState6","isInProgress","setIsInProgress","_useState7","_useState8","interval","setInterval","transcripts","getTranscripts","projectId","setTimeout","transcript","status","clearInterval","updateTranscript","editedTranscript","originalTranscript","pe","createTranscript","newTranscript","deleteTranscript","Context_ApiContext","Consumer","PaperEdits","allPaperEdits","paperEdits","getAllPaperEdits","paperEdit","createPaperEdit","newPaperEdit","paperedit","updatePaperEdit","deletePaperEdit","genBreadcrumb","WorkspaceView","match","params","active","setActive","setName","getProject","getProjectName","Tabs","activeKey","onSelect","tab","Tab","eventKey","Workspace_Transcripts","Workspace_PaperEdits","TranscriptEditor","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","context","getTranscript","transcriptId","then","json","setState","projectTitle","transcriptTitle","transcriptJson","mediaType","saveToServer","alert","data","transcriptEditorRef","current","getEditorContent","savedNotification","CustomAlert_default","dismissable","heading","message","catch","e","redirectToAnnotatePage","redirect","renderRedirect","react_router","to","newTranscriptId","createRef","fluid","md","ld","xl","react_transcript_editor","transcriptData","mediaUrl","isEditable","sttJsonType","ref","Component","contextType","colourStyles","control","styles","select_color_styles_objectSpread","backgroundColor","option","isDisabled","isFocused","isSelected","borderLeft","borderColor","color","cursor","multiValue","border","multiValueLabel","multiValueRemove","speakersColorStyles","select_speakers_color_styles_objectSpread","SearchBar","handleToggleSearchTextPreferences","showTextSearchPreferences","handleToggleSearchLabelsPreferences","showLabelsSearchPreferences","handleToggleSearchSpeakersPreferences","showSpeakersSearchPreferences","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleToggleAll","handleHideAll","_this2","Card","Header","InputGroup","Prepend","Text","faSearch","FormControl","onChange","placeholder","aria-label","aria-describedby","DropdownButton","drop","as","Append","faFilter","Dropdown","Item","faTag","faCheck","faUser","faAlignJustify","Divider","react_select_esm","value","isMulti","isSearchable","options","labelsOptions","speakersOptions","Form","Check","checked","label","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","forEach","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","push","addWordsToSpeakersParagraphs","findAnnotationInParagraph","annotations","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","annotation","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","Paragraph_objectSpread","data-paragraph-text","paragraphTextWithoutPunctuation","lg","width","speakerName","toUpperCase","shortTimecode","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","dec","Math","floor","_this$props","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","role","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","annotationId","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","faPen","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","labelId","wordEl","Paragraphs_Word","Paragraphs_AnnotationOverlayTrigger","note","Paragraphs_Paragraph","csscolors","yellow","greenyellow","deepskyblue","deeppink","aqua","black","blueviolet","brown","burlywood","cadetblue","chocolate","coral","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","blue","dimgray","dimgrey","dodgerblue","firebrick","forestgreen","fuchsia","gainsboro","goldenrod","gold","gray","green","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","chartreuse","limegreen","linen","magenta","maroon","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","yellowgreen","aquamarine","mediumaquamarine","colorNamesList","freeze","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","onLabelSaved","handleClose","Group","controlId","Label","Control","defaultValue","onInput","rows","faSyncAlt","lib","triangle","onChangeComplete","colors","LabelModal","show","handleShow","openBtn","Modal","onHide","closeButton","Title","Body","LabelsList_LabelForm","LabelsList","removeLabel","confirm","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup","LabelsList_LabelModal","disabled","faTimes","labelsList","height","overflowY","overflowX","isLabelsListOpen","faTags","faCog","Footer","onlyCallOnce","cb","duration","timer","args","clearTimeout","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","has","set","return","Transcript","getAllAnnotations","createLabel","labels","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","currentTime","play","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","res","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","element","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","JSON","parse","stringify","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","showLabelsReference","getCurrentWordTime","currentWordTime","transcriptMediaCard","time","round","highlights","scoped","cardBodyHeight","src","onTimeUpdate","controls","ButtonGroup","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","Transcripts_LabelsList","Transcripts_SearchBar","onDoubleClick","overflow","Transcripts_Paragraphs","Transcripts","transcriptsElNav","Nav","cuid","Link","faClock","faExclamationTriangle","transcriptsElTab","Pane","Transcripts_Transcript","defaultActiveKey","Content","parseWordElDataset","innerText","getDataFromUserWordsSelection","Array","from","w","isOneParagraph","firstword","divideWordsSelectionsIntoParagraphs","previousWordSpeaker","currentParagraph","paragraphsResult","defaultReelName","defaultFps","defaultTimecodeOffset","defaultSampleRate","ProgramScript","updateVideoContextWidth","card","offsetWidth","getPaperEdit","papereditId","programmeScript","elements","addEventListener","handleReorder","list","handleEdit","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","insertPointElement","el","handleAddTranscriptSelectionToProgrammeScript","reverse","getSequenceJsonEDL","_edlSq$events","edlSq","events","programmeScriptPaperCutsWithId","currentTranscript","tr","startTime","endTime","reelName","metadata","clipName","fps","offset","timecode","sampleRate","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","firstElement","generateADL","projectOriginator","edits","event","frameRate","projectName","handleExportFCPX","jsonToFCPX","getProgrammeScriptJson","_edlSq$events2","ProgrammeScript_objectSpread","programmeScriptJsonToText","edlsqJson","body","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleExportTxt","getPlayList","sourceStart","handleUpdatePreview","playlist","resetPreview","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","removeEventListener","PreviewCanvas_default","noGutters","faPlus","faHeading","faMicrophoneAlt","faSync","faShare","faInfoCircle","faSave","ProgrammeScriptContainer_default","PaperEditor","getProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","videoHeight","faAngleDown","faAngleUp","span","PaperEditor_Transcripts","ProgrammeScript","NoMatch","Routes","react_router_dom","exact","path","component","Workspace","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","applicationType","mode","headers","Content-Type","_args","fetch","corsFetch","ApiWrapper","projectsIdUrl","projectsUrl","transcriptsUrl","transcriptsIdUrl","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","labelsUrl","labelsIdUrl","labelsId","baseUrl","env","API_URL","projects","resProject","paperedits","transcriptResult","getAllLabels","labelsResults","annotationsResult","transcriptsResult","Promise","all","transcriptsJson","annotationsJson","currentAnnotationsSet","paperEditResult","projectResult","DemoApiWrapper","_id","p","transcriptsData","defaultLabel","unshift","statusCode","jsENV","dynamicApiWrapper","demoApiWrapper","apiWrapper","electronWrapper","ElectronWrapper","demoWarningMessage","Alert","App","envWarning","offlineWarning","navigator","onLine","Provider","src_Routes","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.742d656c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__2hb7q\",\"unselectable\":\"Paragraphs_unselectable__-gkJp\",\"highlightedWord\":\"Paragraphs_highlightedWord__2R7lz\"};","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app or locally testing (Node)\n  // if (window.process === undefined) {\n  if (window.process === undefined || window.process.versions.node !== undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n      //   console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n      //   console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      try {\n        process.chdir(__dirname);\n        // process.chdir('..');\n        // console.log('New directory: ' + process.cwd());\n      }\n      catch (err) {\n        console.log('chdir: ' + err);\n      }\n\n      return 'cep';\n\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import { createContext } from 'react';\n\nconst ApiContext = createContext(); // initialised by App.js\n\nexport default ApiContext;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","const arraysMatch = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) return false;\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n\n  return true;\n};\n\nexport default arraysMatch;","import React, { useState, useEffect, useReducer } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nimport { anyInText } from '../../../Util/in-text';\nimport arrayMatch from '../../../Util/array-match';\nimport List from '@bbc/digital-paper-edit-react-components/List';\nimport SearchBar from '@bbc/digital-paper-edit-react-components/SearchBar';\nimport FormModal from '@bbc/digital-paper-edit-react-components/FormModal';\n\nconst initialFormState = {\n  title: '',\n  description: '',\n  id: null\n};\n\nconst formReducer = (state = initialFormState, { type, payload }) => {\n  switch (type) {\n  case 'update':\n    return { ...state, ...payload };\n  case 'reset': {\n    return { initialFormState };\n  }\n  default:\n    return state;\n  }\n};\n\nconst ItemsContainer = (props) => {\n  const type = props.type;\n  const [ items, setItems ] = useState([]);\n\n  const [ showModal, setShowModal ] = useState(false);\n  const [ formData, dispatchForm ] = useReducer(formReducer, initialFormState);\n\n  // The form works both for new/create and edit/update\n  const handleSaveForm = (item) => {\n    props.handleSave(item);\n    setShowModal(false);\n    dispatchForm({ type: 'reset' });\n  };\n\n  const handleEditItem = (id) => {\n    const item = items.find((i) => i.id === id);\n    dispatchForm({\n      type: 'update',\n      payload: item\n    });\n    setShowModal(true);\n  };\n\n  const handleDeleteItem = (id) => {\n    props.handleDelete(id);\n  };\n\n  const handleFilterDisplay = (item, text) => {\n    if (anyInText([ item.title, item.description ], text)) {\n      item.display = true;\n    } else {\n      item.display = false;\n    }\n\n    return item;\n  };\n\n  const handleSearch = text => {\n    const results = items.map(item => handleFilterDisplay(item, text));\n    setItems(results);\n  };\n\n  const toggleShowModal = () => {\n    console.log('toggle', !showModal);\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    if (!arrayMatch(props.items, items)) {\n      setItems(props.items);\n    }\n\n    return () => {\n\n    };\n\n  }, [ items, props.items ]);\n\n  let searchEl;\n  let showItems;\n\n  if (items.length > 0) {\n    searchEl = <SearchBar handleSearch={ handleSearch } />;\n    showItems = (\n      <List\n        items={ items }\n        handleEditItem={ handleEditItem }\n        handleDeleteItem={ handleDeleteItem }\n      />\n    );\n\n  } else {\n    showItems = (<i>There are no {type}s, create a new one to get started.</i>);\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={ 9 } >\n          {searchEl}\n        </Col>\n        <Col xs={ 12 } sm={ 3 } >\n          <Button onClick={ toggleShowModal }\n            variant=\"outline-secondary\"\n            size=\"sm\" block>\n                New {type}\n          </Button>\n        </Col>\n      </Row>\n      {showItems}\n      <FormModal\n        { ...formData }\n        modalTitle={ formData.id ? `Edit ${ type }` : `New ${ type }` }\n        showModal={ showModal }\n        handleSaveForm={ handleSaveForm }\n        itemType={ type.toLowerCase }\n      />\n    </>\n  );\n};\n\nItemsContainer.propTypes = {\n  handleSave: PropTypes.any,\n  handleDelete: PropTypes.any,\n  items: PropTypes.array.isRequired,\n  type: PropTypes.string\n};\n\nItemsContainer.defaultProps = {\n  type: 'Project'\n};\n\nexport default ItemsContainer;\n","const inText = (findText, sourceText) => {\n  return findText.toLowerCase().trim().includes(sourceText.toLowerCase().trim());\n};\n\nconst anyInText = (arr, sourceText) => {\n  return arr.find(findText => {\n    return inText(findText, sourceText);\n  });\n};\n\nexport { inText, anyInText } ;","const updateItem = (id, newItem, items) => {\n  const newItems = items;\n  const index = items.findIndex(item => item.id === id);\n  Object.assign(newItems[index], newItem);\n\n  return newItems;\n};\n\nconst deleteItem = (id, items) => {\n  const newItems = items.filter(item => item.id !== id);\n\n  return newItems;\n};\n\nconst addItem = (item, items) => {\n  return [ ...items, item ];\n};\n\nconst itemsReducer = (state, action) => {\n  switch (action.type) {\n  case 'update':\n    return {\n      ...state,\n      items: action.items\n    };\n  case 'updateItem':\n    return {\n      ...state,\n      items: updateItem(action.id, action.item, state.items)\n    };\n  case 'add':\n    return {\n      ...state,\n      items: [ ...state.items, action.newItem ]\n    };\n  case 'delete':\n    return {\n      ...state,\n      items: deleteItem(action.id, state.items)\n    };\n  default:\n    return state;\n  }\n};\n\nconst reducers = ({ projects }, action) => {\n  return {\n    projects: itemsReducer(projects, action)\n  };\n};\n\nexport { reducers, updateItem, deleteItem, addItem };","import React, { useEffect, useState, useContext } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Breadcrumb from '@bbc/digital-paper-edit-react-components/Breadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ItemsContainer from '../lib/ItemsContainer';\nimport ApiContext from '../../Context/ApiContext';\nimport { deleteItem, updateItem, addItem } from '../../Context/reducers';\n\nconst Projects = () => {\n  const [ isFetch, setIsFetch ] = useState(false);\n  const [ items, setItems ] = useState([]);\n\n  const type = 'Project';\n  const api = useContext(ApiContext);\n\n  const createProject = async (item) => {\n    const response = await api.createProject(item);\n    if (response.ok) {\n      const newProject = response.project;\n      newProject.display = true;\n      const newItems = addItem(newProject, items);\n      setItems(newItems);\n    } else {\n      console.error('Failed to add project', item);\n    }\n  };\n\n  const updateProject = async (id, item) => {\n    const response = await api.updateProject(id, item);\n\n    if (response.ok) {\n      const project = response.project;\n      project.display = true;\n      const newItems = updateItem(id, project, items);\n      setItems(newItems);\n    }\n  };\n\n  const handleSave = async (item) => {\n    if (item.id) {\n      return await updateProject(item.id, item);\n    } else {\n      return await createProject(item);\n    }\n  };\n\n  const deleteProject = async (id) => {\n    let response;\n    try {\n      response = await api.deleteProject(id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deleteProject', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    console.log('handle delete');\n    const response = deleteProject(id);\n    if (response.ok) {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  useEffect(() => {\n    const getProjects = async () => {\n      let allProjects = [];\n\n      try {\n        const result = await api.getAllProjects();\n        allProjects = result.map(project => {\n          const id = project.id;\n          project.key = id;\n          project.url = `/projects/${ id }`;\n          project.display = true;\n\n          return project;\n        });\n\n      } catch (e) {\n        console.log('Failed to get projects');\n      }\n\n      setItems(allProjects);\n    };\n\n    if (!isFetch) {\n      getProjects();\n      setIsFetch(true);\n    }\n\n    return () => {\n    };\n\n  }, [ api, isFetch, items ]);\n\n  const breadcrumbItems = [\n    {\n      name: `${ type }s`,\n      link: `/${ type }s`,\n    }\n  ];\n\n  return (\n    <>\n      <Container\n        data-testid='projectsContainer'\n        style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 }>\n            <Breadcrumb\n              data-testid='projectsBreadcrumb'\n              items={ breadcrumbItems } />\n          </Col>\n        </Row>\n        <ItemsContainer\n          key={ type }\n          model={ type }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      </Container>\n      <CustomFooter />\n    </>\n  );\n};\nexport default Projects;\n","import React, { useEffect, useState, useContext } from 'react';\nimport ItemsContainer from '../../lib/ItemsContainer';\nimport PropTypes from 'prop-types';\nimport { deleteItem, updateItem, addItem } from '../../../Context/reducers';\nimport ApiContext from '../../../Context/ApiContext';\nconst intervalInMs = 30000;\n\nconst isTranscriptionInProgress = (transcripts) => {\n  if (transcripts.length !== 0) {\n    const result = transcripts.find((transcript) => {\n      return transcript.status === 'in-progress';\n    });\n\n    return result ? true : false;\n  }\n\n  return false;\n};\n\nconst Transcripts = (props) => {\n  const api = useContext(ApiContext);\n  const [ isFetch, setIsFetch ] = useState(false);\n  const [ items, setItems ] = useState([]);\n  const [ isInProgress, setIsInProgress ] = useState(false);\n  const [ interval, setInterval ] = useState();\n  const type = 'Transcript';\n\n  useEffect(() => {\n    const genUrl = (id) => {\n      return `/projects/${ props.projectId }/transcripts/${ id }/correct`;\n    };\n\n    const getTranscripts = async () => {\n      const response = await api.getTranscripts(props.projectId);\n\n      if (response) {\n        const newItems = response.transcripts.map((item) => {\n          item.display = true;\n          item.url = genUrl(item.id);\n          item.projectId = props.projectId;\n\n          return item;\n        });\n        setItems(newItems);\n      }\n\n    };\n\n    if (!isFetch) {\n      setIsFetch(true);\n      getTranscripts();\n    }\n\n    // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly,\n    // and only if there are items in progress in the list, it checks the backed for updates\n    if (isInProgress && !interval) {\n      setInterval(setTimeout(() => {\n        getTranscripts();\n      }, intervalInMs));\n    }\n\n    if (items.length > 0) {\n      setIsInProgress(isTranscriptionInProgress(items));\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [ api, interval, isFetch, isInProgress, items, props.projectId ]);\n\n  const updateTranscript = async (id, item) => {\n    const queryParamsOptions = false;\n    const response = await api.updateTranscript(\n      props.projectId,\n      id,\n      queryParamsOptions,\n      item\n    );\n\n    if (response.ok) {\n      const editedTranscript = response.transcript;\n      const index = items.findIndex(pe => pe.id === id);\n      const originalTranscript = items[index];\n\n      editedTranscript.display = true;\n      editedTranscript.status = originalTranscript.status;\n      const newItems = updateItem(id, editedTranscript, items);\n      setItems(newItems);\n    } else {\n      console.log('api.updateTranscript', response);\n    }\n  };\n\n  const createTranscript = async (item) => {\n    const response = await api.createTranscript(item);\n    if (response.ok) {\n      const newTranscript = response.transcript;\n\n      newTranscript.display = true;\n      newTranscript.status = 'in-progress';\n\n      const newItems = addItem(newTranscript, items);\n      setItems(newItems);\n    } else {\n      console.log('api.updateTranscript', response);\n    }\n  };\n\n  const handleSave = (item) => {\n    if (item.id) {\n      return updateTranscript(item.id, item);\n    } else {\n      return createTranscript(item);\n    }\n  };\n\n  const deleteTranscript = async (id) => {\n    console.log(api);\n    let response;\n    try {\n      response = await api.deleteTranscript(props.projectId, id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deleteTranscript', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    const response = deleteTranscript(id);\n    if (response.ok) {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  return (\n    <ApiContext.Consumer>\n      {() => (\n        <ItemsContainer\n          type={ type }\n          key={ type }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      )}\n    </ApiContext.Consumer>\n  );\n};\n\nTranscripts.propTypes = {\n  projectId: PropTypes.any\n};\n\nexport default React.memo(Transcripts);\n","import React, { useEffect, useState, useContext } from 'react';\nimport ItemsContainer from '../../lib/ItemsContainer';\nimport PropTypes from 'prop-types';\nimport { deleteItem, updateItem, addItem } from '../../../Context/reducers';\nimport ApiContext from '../../../Context/ApiContext';\n\nconst PaperEdits = (props) => {\n  const api = useContext(ApiContext);\n  const [ items, setItems ] = useState([]);\n  const type = 'Paper Edit';\n  const [ isFetch, setIsFetch ] = useState(false);\n\n  useEffect(() => {\n    const genUrl = (id) => {\n      return `/projects/${ props.projectId }/paperedits/${ id }`;\n    };\n\n    const getAllPaperEdits = async () => {\n      const allPaperEdits = await api.getAllPaperEdits(props.projectId);\n\n      const paperEdits = allPaperEdits.map(paperEdit => {\n        paperEdit.display = true;\n        paperEdit.url = genUrl(paperEdit.id);\n        paperEdit.projectId = props.projectId;\n\n        return paperEdit;\n      });\n\n      setItems(paperEdits);\n\n    };\n    // TODO: some error handling\n    if (!isFetch) {\n      getAllPaperEdits();\n      setIsFetch(true);\n    }\n\n    return () => {\n    };\n  }, [ api, isFetch, items, props.projectId ]);\n\n  const createPaperEdit = async (item) => {\n    const response = await api.createPaperEdit(props.projectId, item);\n    if (response.ok) {\n      const newPaperEdit = response.paperedit;\n      newPaperEdit.display = true;\n      // newPaperEdit.url = genUrl(newPaperEdit.id);\n\n      const newItems = addItem(newPaperEdit, items);\n      setItems(newItems);\n    } else {\n      console.log('api.createPaperEdit', response);\n    }\n  };\n\n  const updatePaperEdit = async (id, item) => {\n    const response = await api.updatePaperEdit(props.projectId, id, item);\n    const paperEdit = response.paperedit;\n\n    if (response.ok && paperEdit) {\n      paperEdit.display = true;\n\n      const newItems = updateItem(id, paperEdit, items);\n      setItems(newItems);\n    } else {\n      console.log('api.createPaperEdit', response);\n    }\n  };\n\n  const handleSave = (item) => {\n    if (item.id) {\n      return updatePaperEdit(item.id, item);\n    } else {\n      return createPaperEdit(item);\n    }\n  };\n\n  const deletePaperEdit = async (id) => {\n    let response;\n    try {\n      response = await api.deletePaperEdit(props.projectId, id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deletePaperEdit', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    console.log('handle delete');\n    const response = deletePaperEdit(id);\n    if (response.ok) {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  return (\n    <ApiContext.Consumer>\n      {() => (\n        <ItemsContainer\n          type={ type }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      )}\n    </ApiContext.Consumer>\n\n  );\n};\n\nPaperEdits.propTypes = {\n  projectId: PropTypes.any\n};\n\nexport default PaperEdits;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport Transcripts from './Transcripts';\nimport PaperEdits from './PaperEdits';\nimport Breadcrumb from '@bbc/digital-paper-edit-react-components/Breadcrumb';\n\nimport ApiContext from '../../Context/ApiContext';\n\nconst genBreadcrumb = (name) => [\n  {\n    name: 'Projects',\n    link: '/projects'\n  },\n  {\n    name: name\n  }\n];\n\nconst WorkspaceView = (props) => {\n  const api = useContext(ApiContext);\n  const id = props.match.params.projectId;\n\n  const [ active, setActive ] = useState('transcripts');\n  const [ name, setName ] = useState('Project Name');\n\n  useEffect(() => {\n\n    const getProjectName = async () => {\n      try {\n        const response = await api.getProject(id);\n        setName(response.project.title);\n      } catch (e) {\n        console.error('Could not get Project Id: ', id, e );\n      }\n    };\n\n    getProjectName();\n\n    return () => {\n    };\n\n  }, [ api, id, name ]);\n\n  return (\n    <ApiContext.Consumer>\n      { () => (\n        <>\n          <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n            <Row>\n              <Col sm={ 12 }>\n                <Breadcrumb items={ genBreadcrumb(name) } />\n              </Col>\n            </Row>\n\n            <Tabs\n              id=\"controlled-tab-example\"\n              activeKey={ active }\n              onSelect={ tab => setActive(tab) }\n            >\n              <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n                <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n                  <Transcripts projectId={ id }/>\n                </Container>\n              </Tab>\n\n              <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n                <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n                  <PaperEdits projectId={ id } />\n                </Container>\n              </Tab>\n            </Tabs>\n\n          </Container>\n          <CustomFooter />\n        </>\n      ) }\n\n    </ApiContext.Consumer>\n  );\n};\n\nexport default WorkspaceView;","import React, { Component } from 'react';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor as ReactTranscriptEditor } from '@bbc/react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport ApiContext from '../../../Context/ApiContext';\n\nimport Breadcrumb from '@bbc/digital-paper-edit-react-components/Breadcrumb';\nimport CustomAlert from '@bbc/digital-paper-edit-react-components/CustomAlert';\n\nclass TranscriptEditor extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null,\n      mediaType: 'video'\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url,\n          mediaType: json.mediaType\n        });\n      });\n  }\n\n  saveToServer = () => {\n    const api = this.context;\n    // TODO: add Api call to save content of\n    alert('save to server');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in @bbc/react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in bbc/react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    api.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('api.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { marginBottom: '5em' } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <Breadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson !== null &&\n          <ReactTranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            title={ this.state.transcriptTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n            mediaType={ this.state.mediaType }\n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptEditor;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from @bbc/react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n  // console.log('results', results);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@bbc/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\nimport removePunctuation from '../../../../Util/remove-punctuation';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiContext from '../../../Context/ApiContext';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' api.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations\n        });\n      });\n  }\n\n  onLabelCreate = (newLabel) => {\n    const api = this.context;\n    api.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    const api = this.context;\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    api.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    const api = this.context;\n    api.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const api = this.context;\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      api.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const api = this.context;\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    api.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via api\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const api = this.context;\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      api.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    const cardBodyHeight = this.props.mediaType === 'audio' ? '100vh' : '60vh';\n\n    let transcriptMediaCard;\n\n    if (this.props.mediaType === 'audio') {\n      transcriptMediaCard = (\n        <Card.Header>\n          <audio\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              width: '100%',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    } else {\n      transcriptMediaCard = (\n        <Card.Header>\n          <video\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              width: '100%',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    }\n\n    return (\n      <>\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        <Card>\n          {transcriptMediaCard}\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } >\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: cardBodyHeight, overflow: 'scroll' } }\n          >\n\n            {highlights}\n\n            {this.props.transcript &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\nimport cuid from 'cuid';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ cuid() }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ cuid() } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            mediaType={ transcript.mediaType }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n   * TODO: at the moment only works for selections within a paragraph\n   * @param {*} e - browser event\n   * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n   */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport cuid from 'cuid';\nimport PreviewCanvas from '@bbc/digital-paper-edit-react-components/PreviewCanvas';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@bbc/aes31-adl-composer';\nimport jsonToFCPX from '@bbc/fcpx-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScriptContainer from '@bbc/digital-paper-edit-react-components/ProgrammeScriptContainer';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs';\nimport ApiContext from '../../../Context/ApiContext';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\n\nclass ProgramScript extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      width: 150,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ],\n    };\n  }\n\n  updateVideoContextWidth = () => {\n    this.setState({\n      width: this.card.offsetWidth - 10\n    });\n  }\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript\n        }\n        // TODO: figure out how to update preview\n        // , () => {\n        //   this.handleUpdatePreview();\n        // }\n        );\n      });\n    this.updateVideoContextWidth();\n    window.addEventListener('resize', this.updateVideoContextWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateVideoContextWidth);\n  }\n\n  // TODO: save to server\n  handleReorder = (list) => {\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDelete = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  handleEdit = (i) => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      console.log(text);\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    console.log('getDataFromUserWordsSelection::', result);\n    if (result) {\n      console.log(JSON.stringify(result, null, 2));\n\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    // const result = generateADL(edlSq);\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: firstElement.fps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          ...element,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log(edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text;}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  getTranscript = (transcriptId) => {\n    return this.props.transcripts.find((tr) => tr.id === transcriptId );\n  }\n\n  getPlayList = () => {\n    let startTime = 0;\n\n    return this.state.programmeScript.elements.filter((element) => element.type === 'paper-cut')\n      .map((element) => {\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const transcript = this.getTranscript(element.transcriptId);\n        const result = {\n          type:'video',\n          start: startTime,\n          sourceStart: element.start,\n          duration: element.end - element.start,\n          src: this.getTranscript(element.transcriptId).url\n        };\n\n        startTime += result.duration;\n\n        return result;\n      });\n  };\n\n  handleUpdatePreview = () => {\n    const playlist = this.getPlayList();\n    // Workaround to mound and unmount the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      console.log('handleUpdatePreview', playlist);\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    console.log('handleUpdatePreview', playlist);\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const api = this.context;\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      api.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  // information around progressbar in the playlist object\n  render() {\n    return (\n      <>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n        </h2>\n        <Card>\n          <Card.Header ref={ el => (this.card = el) }>\n            <div>\n              <span>\n                { !this.state.resetPreview ?\n                  <PreviewCanvas width={ this.state.width } playlist={ this.state.playlist } />\n                  : null }\n              </span>\n            </div>\n          </Card.Header>\n\n          <Card.Header>\n            <Row noGutters>\n              <Col sm={ 12 } md={ 3 } >\n                <Button\n                  // block\n                  variant=\"outline-secondary\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                  title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 2 } ld={ 2 } xl={ 2 }>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faPlus } />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faHeading } /> Heading\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faStickyNote } /> Note\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 3 } >\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleUpdatePreview }\n                  // size=\"sm\"\n                  title=\"update preview\"\n                  // block\n                >\n                  <FontAwesomeIcon icon={ faSync } /> Preview\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 3 } >\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faShare } /> Export\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ this.handleExportEDL }\n                      title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                    >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                    >\n                      {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportFCPX }\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                    >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                    >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {alert('export word doc not implemented yet');} }\n                      title=\"export docx, export the programme script as a word document\"\n                    >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                    >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 1 } >\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleSaveProgrammeScript }\n                  // size=\"sm\"\n                  title=\"save programme script\"\n                  block\n                >\n                  <FontAwesomeIcon icon={ faSave } />\n                  {/* Save */}\n                </Button>\n              </Col>\n            </Row>\n          </Card.Header>\n\n          <Card.Body>\n            <article\n              style={ { height: '60vh', overflow: 'scroll' } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScriptContainer\n                items={ this.state.programmeScript.elements }\n                handleReorder={ this.handleReorder }\n                handleDelete={ this.handleDelete }\n                handleEdit={ this.handleEdit }\n\n              />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport Breadcrumb from '@bbc/digital-paper-edit-react-components/Breadcrumb';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgrammeScript from './ProgrammeScript';\nimport ApiContext from '../../Context/ApiContext';\nimport PropTypes from 'prop-types';\n\nclass PaperEditor extends Component {\n  static contextType = ApiContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n      videoHeight : '10em',\n    };\n  }\n\n  componentDidMount = async () => {\n    const api = this.context;\n\n    api.getProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <br/>\n        <Row>\n          <Col sm={ 12 } >\n            <Breadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgrammeScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n                videoHeight={ this.props.videoHeight }\n              />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nPaperEditor.propTypes = {\n  match: PropTypes.any,\n  videoHeight: PropTypes.any\n};\n\nexport default PaperEditor;\n","import React from 'react';\nimport Projects from './Components/Projects/index.js';\nimport Workspace from './Components/Workspace';\nimport TranscriptEditor from './Components/Workspace/Transcripts/TranscriptEditor.js';\nimport PaperEditor from './Components/PaperEditor';\nimport { Switch, Route, Redirect, BrowserRouter } from 'react-router-dom';\n\nconst NoMatch = () => {\n  return <h1>There was an error loading the page you requested</h1>;\n};\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/projects\" />\n        <Route exact path=\"/projects\" component={ Projects } />\n        <Route exact path=\"/projects/:projectId\" component={ Workspace } />\n        <Route\n          exact\n          path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n          component={ TranscriptEditor }\n        />\n        <Route\n          exact\n          path=\"/projects/:projectId/paperedits/:papereditId\"\n          component={ PaperEditor }\n        />\n        <Route component={ NoMatch } />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  constructor() {\n    this.url = 'http://localhost:3000/db/';\n    this.projects = this.url + 'projects.json';\n    this.paperEdits = this.url + 'paperedits.json';\n    this.transcripts = this.url + 'transcripts.json';\n    this.labels = this.url + 'labels.json';\n    this.annotations = this.url + 'annotations.json';\n  }\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const response = await fetch(this.projects);\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  async getProject(id) {\n    const response = await fetch(this.projects);\n    const projects = await response.json();\n    const project = projects.find((p) => {\n      return p._id === id;\n    });\n\n    return { status: 'ok', project: project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n    console.log(data);\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n    console.log(id, data);\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n    console.log(id);\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n\n  async getTranscripts(projectId) {\n    const response = await fetch(this.transcripts);\n    const transcriptsData = await response.json();\n\n    const transcripts = transcriptsData.filter((transcript) => {\n      return transcript.projectId === projectId;\n    }).map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    console.log(projectId, formData, data);\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch(this.transcripts);\n    const transcripts = await response.json();\n    const transcript = transcripts.find((tr) => {\n      return tr._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, queryParamsOptions, data);\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId);\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch(this.annotations);\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch(this.annotations);\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, data);\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, annotationId);\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n\n  async getAllLabels(projectId) {\n    const response = await fetch(this.labels);\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch(this.labels);\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, data);\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, labelId, data);\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, labelId);\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n\n  async getAllPaperEdits(projectId) {\n    const response = await fetch(this.paperEdits);\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((pe) => {\n      return pe.projectId === projectId;\n    });\n\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((pe) => {\n          pe.id = pe._id;\n\n          return pe;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch(this.paperEdits);\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((pe) => {\n      return pe.id === paperEditId;\n    });\n\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, data);\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, id, data);\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, id);\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\nconst dynamicApiWrapper = () => {\n  // await async dependencies\n  // export the module\n\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n};\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default dynamicApiWrapper();\n","import React from 'react';\nimport 'bootstrap-css-only/css/bootstrap.css';\nimport ApiContext from './Context/ApiContext';\nimport CustomAlert from '@bbc/digital-paper-edit-react-components/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\nimport Routes from './Routes';\nimport ApiWrapper from './ApiWrapper';\n\nconst demoWarningMessage = (\n  <>\n    <p> This is a demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n    >see project Github repository for more info</Alert.Link>.\n    </p>\n    <p>This is a read-only demo you can only play around with existing projects!</p>\n  </>\n);\n\nconst App = () => {\n\n  // TODO: remove unused rootes\n  let envWarning = null;\n  let offlineWarning = null;\n\n  if (process.env.REACT_APP_NODE_ENV === 'demo') {\n    envWarning = (\n      <Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Demo mode' }\n          message={ demoWarningMessage }/>\n      </Container>\n    );\n  }\n\n  if (!navigator.onLine) {\n    offlineWarning = (\n      <>\n        <br/>\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Offline warning' }\n            message={ 'You don\\'t seem to be connected to the internet ' }/>\n        </Container>\n      </>);\n  }\n\n  return (\n    <>\n      {envWarning}\n      {offlineWarning}\n      <ApiContext.Provider value={ ApiWrapper }>\n        <Routes />\n      </ApiContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}